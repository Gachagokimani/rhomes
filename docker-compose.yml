services:
  web:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: rhomes_web
    restart: unless-stopped
    ports:
      - "5173:5173"
    volumes:
      - .:/app
    depends_on:
      - mongo
  backend:
    build:
      context: ./services/backend
      dockerfile: Dockerfile
    container_name: rhomes_backend
    ports:
      - "3000:3000"
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/backend:/app
    command: ["pnpm", "dev"]
    env_file:
      - .env
    environment:
      - DB_TYPE=${DB_TYPE}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - PORT=3000
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
      - MONGO_INITDB_DATABASE=${DB_TYPE}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
  mongo:
    build:
      context: ./services/database
      dockerfile: Dockerfile
    container_name: rhomes_mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
      MONGO_INITDB_DATABASE: ${DB_TYPE}
    volumes:
      - mongo_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    healthcheck:
      test: ["CMD-SHELL", "mongosh --eval 'db.runCommand({ping:1}).ok' --quiet | grep 1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    
    ports:
      - "27017:27017"
    command: >
      bash -c "
        echo 'Starting MongoDB with authentication...' &&
        mongod --bind_ip_all --auth
      "
  redis:
    image: redis:7-alpine
    container_name: rhomes_redis
    restart: always
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a ${REDIS_PASSWORD} ping | grep PONG || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
      mongo_data:
